
// Формирует и отправляет произвольную метрику в Prometheus методом PUSH
// Предназначена для непосредственного вызова из сторонних процедуры. Не использует спр. Алгоритмы
//
//  Параметры
//  ИмяМетрики				   - Строка - наименование метрики в Prometheus.
//  ТипМетрики                 - Строка - типизация метрики в Prometheus. Необязательный. 
//							   При отсутствии - будет запись типа UNTYPE.
//  ТаблицаЗначений            - Таблица значний - Таблица значений с данными метрик.
//							   Требованя к таблице значений:
//							   ~ содержимое строго строкового типа
//							   ~ обязательное наличие колонки "ЗначениеМетрик"
//							   ~ наименование прочих колонок удовлетворяет фасету [a-zA-Z]([a-zA-Z0-9_:])* 
//  АдресPushgateway           - Строка - Полный путь к Pushgateway для приема метрик. Необязательный.
Процедура ВыполнитьОтправкуПроизвольныхМетрикМетодомPUSH(ИмяМетрики, ТипМетрики = "", ТаблицаЗначений, АдресPushgateway = Неопределено) Экспорт
	
	МетрикаСтрокой = prРасчетМетрикPrometheusСервер.ПривестиТаблицуРасчетаМетрикиКСтрокеPrometheus(ИмяМетрики, ТипМетрики, ТаблицаЗначений);
	
	prРасчетМетрикPrometheusСервер.ВыполнитьОтправкуМетодомPUSH(МетрикаСтрокой, АдресPushgateway);
	
КонецПроцедуры


// Формирует произвольную метрику для получением Prometheus методом PULL 
// Предназначена для непосредственного вызова из сторонних процедуры. Не использует спр. Алгоритмы
//
//  Параметры
//  ИмяМетрики				   - Строка - наименование метрики в Prometheus.
//  ТипМетрики                 - Строка - типизация метрики в Prometheus. Необязательный. 
//							   При отсутствии - будет запись типа UNTYPE.
//  ТаблицаЗначений            - Таблица значний - Таблица значений с данными метрик.
//							   Требованя к таблице значений:
//							   ~ содержимое строго строкового типа
//							   ~ обязательное наличие колонки "ЗначениеМетрик"
//							   ~ наименование прочих колонок удовлетворяет фасету [a-zA-Z]([a-zA-Z0-9_:])* 
Процедура ВыполнитьПодготовкуПроизвольныхМетрикДляПолученияМетодомPULL(ИмяМетрики, ТипМетрики = "", ТаблицаЗначений, ГраницаАктуальности) Экспорт
		
	МетрикаСтрокой = prРасчетМетрикPrometheusСервер.ПривестиТаблицуРасчетаМетрикиКСтрокеPrometheus(ИмяМетрики, ТипМетрики, ТаблицаЗначений);
	
	МенеджерЗаписи = РегистрыСведений.prРассчитанныеМетрики.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Метрика = ИмяМетрики;
	МенеджерЗаписи.Результат = МетрикаСтрокой;
	МенеджерЗаписи.ГраницаАктуальности = ГраницаАктуальности;
	МенеджерЗаписи.Записать(Истина);

КонецПроцедуры

